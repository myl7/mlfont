---
import BaseLayout from '@/layouts/BaseLayout.astro'
import { getCollection } from 'astro:content'
import { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card'
import SectionCollapsible from '@/components/SectionCollapsible'
import Profile from '@/content/fragments/myl7.md'
import friends from '@/content/data/friends'

const title = "myl7's blog"
const description = "myl7's blog"

const posts = (await getCollection('posts', ({ data: { unlisted } }) => unlisted != true)).sort((a, b) => {
  const timeDelta = b.data.pubDate.getTime() - a.data.pubDate.getTime()
  if (timeDelta != 0) return timeDelta
  return a.slug < b.slug ? -1 : 1
})
---

<BaseLayout {title} {description}>
  <main class="flex flex-col gap-4 px-4">
    <h1 class="sr-only">myl7's blog!</h1>
    <section class="flex flex-col gap-4">
      <div class="flex flex-col gap-1">
        <h2 class="text-xl">Posts</h2>
        <hr />
      </div>
      {
        posts.map(({ slug, data: { title, pubDate, description, updDate } }) => (
          <Card>
            <CardHeader>
              <p class="text-xs text-muted-foreground">
                Published on {pubDate.toISOString().slice(0, 10)}
                {updDate && ` and updated on ${updDate.toISOString().slice(0, 10)}`}
              </p>
              <CardTitle className="text-xl">
                <a class="hover:underline" href={`/p/${slug}`}>
                  {title}
                </a>
              </CardTitle>
            </CardHeader>
            <CardContent>
              <CardDescription>{description}</CardDescription>
            </CardContent>
          </Card>
        ))
      }
    </section>
    <section>
      <SectionCollapsible title="About me" client:load>
        <Card>
          <CardHeader>
            <CardTitle>I am myl7:</CardTitle>
          </CardHeader>
          <CardContent className="post">
            <Profile />
          </CardContent>
        </Card>
      </SectionCollapsible>
    </section>
    <section>
      <SectionCollapsible title="Friends" client:load>
        <Card className="pt-6">
          <CardContent>
            <ul class="flex list-inside list-disc flex-wrap gap-4">
              {
                friends.map((friend) => (
                  <li>
                    <a href={friend.url} class="link">
                      {friend.name}
                    </a>
                  </li>
                ))
              }
            </ul>
          </CardContent>
          <CardFooter>Feel free to request a friend link if you have met me in reality!</CardFooter>
        </Card>
      </SectionCollapsible>
    </section>
  </main>
</BaseLayout>
